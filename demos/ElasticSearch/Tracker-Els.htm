<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>leaflet显示</title>
  <script include="jquery,geohash,moment" src="../../libs/zondyclient/include-lib.js"></script>
  <script include="heater,elasticsearch" src="../../libs/zondyclient/include-leaflet.js"></script>
  <style>
    #mapid {
      height: 600px
    }

    .info {
      padding: 6px 8px;
      font: 14px/16px Arial, Helvetica, sans-serif;
      background: white;
      background: rgba(255, 255, 255, 0.8);
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
      border-radius: 5px;
    }

    .info h4 {
      margin: 0 0 5px;
      color: #777;
    }

    .legend {
      line-height: 18px;
      color: #555;
    }

    .legend i {
      width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
    }
  </style>
</head>

<body>
  <div id="mapid"></div>
  <script>
    var mapExtent, mapLevel, startTime, endTime, timeSpeed, currentTime;
    startTime = currentTime = 1516723200000; //2017-01-24 00:00:00 换算毫秒
    endTime = 1516809599000; //2017-01-24 23:59:59  换算毫秒
    timeSpeed = 600000; //10分钟的速度
    var info = L.control();
    var mymap = L.map('mapid').setView([34.25, 108.95], 10);
    var timer = self.setInterval("clock()", 2000);
    var client = new elasticsearch.Client({
      host: '192.168.94.121:9200'
    });
    var allTitles = []; //记录els滚动分块请求的总块数,一块一块的逐步请求

    initView();
    loadData();
    var hiden ;
    function hide(){
        hiden = document.getElementsByClassName("info");
        hiden['0'].style.display="none";
    }
    function initView() {

      info.onAdd = function(map) {
        /*this._container = L.DomUtil.create('div', 'leaflet-control-clegend');*/
        this._div = L.DomUtil.create('div', 'info' );
        L.DomEvent.on(this._div, 'click', function(){
            hide()
        });



        this.update();
        return this._div;
      };
      info.update = function(time) {
        var timeformat = moment(time).format("YYYY-MM-DD HH:mm:ss");
        this._div.innerHTML = '<h4>北京时间</h4>' +
          '<b>' + timeformat + '</b><br>播放速度:' + timeSpeed / 1000 / 60 + '分钟</br>';
      };
      info.setPosition('bottomleft');
      info.addTo(mymap);
      info.update(1516723200000);

      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=' +
        'sk.eyJ1IjoiY2hlbmdkYWRhIiwiYSI6ImNqZDFjaGo0ZjFzcnoyeG54enoxdnNuZHUifQ.hTWXXBUQ0wdGeuDF3GWeUw', {
          attribution: '<a href="#">MapBox</a>',
          maxZoom: 18,
          id: 'mapbox.streets'
        }).addTo(mymap);

    };

    function clock() {
      mapExtent = mymap.getBounds();
      mapLevel = mymap.getZoom();
      currentTime = currentTime + timeSpeed;
      info.update(currentTime);
      if (currentTime >= endTime) {
        //  window.clearInterval(timer);
      }
      mapLevel = (mapLevel % 20) * 12 / 20; //precision只支持1-12之间
      //loadData(mapLevel, mapExtent, currentTime, currentTime + timeSpeed);
    };

    function loadData(level, extent, startTimeStamp, endTimeStamp) {
      client.search({
        index: 'df_history', //数据库名称
        //type: '2018-01-24',//数据库-表名称
        //也可以是2018-01-24,这里的type实际上上是指的每一张表,如果不设置的话就全库查询,
        //设置的话就针对这一天的表进行查询
        scroll: '2m', // 30s or 2m 保持结果滚动2分钟或30秒
        body: {
          size: 100,  //每次返回数据大小
          query: {
            bool: {
              filter: {
                range: {
                  'dataTime': {
                    from: startTimeStamp, //查询起始时间
                    to: endTimeStamp //查询结束时间,就是上面的起始时间+时间播放速度
                  }
                }
              }
            }
          },
          sort: {
            "dataTime": {
              order: "ASC"
            }
          },
          sort: {
            "dataTime": {
              order: "ASC"
            }
          }
        }
      }, getMoreUntilDone);
    };

    function getMoreUntilDone(error, response) {
      // collect the title from each response
      if (error || response === undefined) {
        return;
      }

      updateView(response);

      if (response.hits.total > allTitles.length) {
        // ask elasticsearch for the next set of hits from this search
        client.scroll({
          scrollId: response._scroll_id,
          scroll: '2m'
        }, getMoreUntilDone);
      } else {
        console.log('every "test" title', allTitles);
      }
    };

    function updateView(response) {
      response.hits.hits.forEach(function(hit) {
        allTitles.push(hit._source.title);
      });
    };
  </script>
</body>

</html>
