<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>中地封装接口-ELS聚类</title>
  <script ip="localhost" socket="8800" include="jquery,geohash,geojson,moment" src="../../libs/zondyclient/include-lib.js"></script>
  <script ip="localhost" socket="8800" include="datastore,mapv" src="../../libs/zondyclient/include-leaflet.js"></script>
  <style>
    #mapid {
      height: 600px
    }

    .info {
      padding: 6px 8px;
      font: 14px/16px Arial, Helvetica, sans-serif;
      background: white;
      background: rgba(255, 255, 255, 0.8);
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
      border-radius: 5px;
    }

    .info h4 {
      margin: 0 0 5px;
      color: #777;
    }

    .legend {
      line-height: 18px;
      color: #555;
    }

    .legend i {
      width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
    }
  </style>
</head>

<body>
  <div id="mapid"></div>
  <script>
    var mapExtent, mapLevel, startTime, endTime, timeSpeed, flashSpeed, currentTime, geojson;
    startTime = currentTime = Date.parse(new Date("2018-01-24 08:00:00")); //1516723200000; 毫秒
    endTime = Date.parse(new Date("2018-01-24 20:00:00")); // 1516809599000; 毫秒
    timeSpeed = 60000; //10分钟的速度
    flashSpeed = 2000; //2秒一刷新
    var map = L.map('mapid').setView([34.25, 108.95], 9);
    var timer = self.setInterval("clock()", flashSpeed);

    var queryOptions= getQueryOptions(), layerOptions = getLayerOptions();

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=' +
      'sk.eyJ1IjoiY2hlbmdkYWRhIiwiYSI6ImNqZDFjaGo0ZjFzcnoyeG54enoxdnNuZHUifQ.hTWXXBUQ0wdGeuDF3GWeUw', {
        attribution: '<a href="#">MapBox</a>',
        maxZoom: 18,
        id: 'mapbox.streets',
      }).addTo(map);

    var info = L.control();
    info.onAdd = function(map) {
      this._div = L.DomUtil.create('div', 'info');
      this.update();
      return this._div;
    };
    info.update = function(time) {
      var timeformat = moment(time).format("YYYY-MM-DD HH:mm:ss");
      this._div.innerHTML = '<h4>北京时间</h4>' +
        '<b>' + timeformat + '</b><br>播放速度:' + timeSpeed / 1000 / 60 + '分钟</br>' +
        '<b>刷新速度:' + flashSpeed / 1000 + '秒</b>';
    };
    info.addTo(map);

    //--------------------------------------------------------------------
    //-----------------下面是实际核心代码，以前都是各种样式------------------
    //--------------------------------------------------------------------
    function clock() {
      mapExtent = map.getBounds();
      mapLevel = map.getZoom();
      currentTime = currentTime + timeSpeed;
      mapLevel = (mapLevel % 20) * 12 / 20 - 1;
      info.update(currentTime);
      loadData(mapLevel, mapExtent, currentTime, currentTime + timeSpeed);
    };

    function loadData(level, extent, startTimeStamp, endTimeStamp) {
      var bound = wrapLatLngBounds(extent);
      var prec = recalcLevel(level);

      queryOptions.space.percision = prec;
      queryOptions.space.west = bound.getWest();
      queryOptions.space.east = bound.getEast();
      queryOptions.space.north = bound.getNorth();
      queryOptions.space.south = bound.getSouth();

      queryOptions.time.starttime = startTimeStamp;
      queryOptions.time.endtime = endTimeStamp;

      var layer = L.zondy.GeoHashService("192.168.94.128", "9091", map, queryOptions, layerOptions);
    };

    function getQueryOptions(){
        return {
            db: "df_history",
            table: "2018-01-24",
            space:{
              field:"geo",
              percision:5,
              west:-180,
              esat:180,
              north:90,
              south:-90
            },
            time:{
              field:"dataTime",
              starttime:"00000",
              endtime:"10000"
            }
        }
    }

    function getLayerOptions() {
      return {
        fillStyle: 'rgba(55, 50, 250, 0.8)',
        shadowColor: 'rgba(255, 250, 50, 1)',
        shadowBlur: 10,
        size: 40,
        globalAlpha: 0.5,
        label: {
          show: true,
          fillStyle: 'white',
          shadowColor: 'yellow',
          font: '15px Arial',
          shadowBlur: 10
        },
        gradient: {
          0: "rgba(49, 54, 149, 0)",
          0.2: "rgba(69,117,180, 0.7)",
          0.3: "rgba(116,173,209, 0.7)",
          0.4: "rgba(171,217,233, 0.7)",
          0.5: "rgba(224,243,248, 0.7)",
          0.6: "rgba(254,224,144,0.7)",
          0.7: "rgba(253,174,97,0.7)",
          0.8: "rgba(244,109,67,0.8)",
          0.9: "rgba(215,48,39,0.8)",
          0.95: "rgba(165, 0, 38,0.8)"
        },
        draw: 'grid'//honeycomb,grid,
      }
    }

    function recalcLevel(level){
      var prec = 5;
      if (level <= 2) {
            prec = 2;
        } else if (level > 2 && level <= 5) {
            prec = 4;
        } else if (level > 5) {
            prec = 8;
        } else if (level > 8 && level <= 11) {
            prec = 9;
        } else if (level > 11 && level <= 13) {
            prec = 10;
        } else if (level > 13 && level <= 15) {
            prec = 11;
        } else if (level > 15) {
            prec = 12;
        };
        return prec;
    }

    function wrapLatLngBounds(extent) {
      var left = extent.getNorthWest().lng < -180 ? -180 : extent.getNorthWest().lng;
      var bottom = extent.getSouthEast().lat < -90 ? -90 : extent.getSouthEast().lat;
      var right = extent.getSouthEast().lng > 180 ? 180 : extent.getSouthEast().lng;
      var top = extent.getNorthWest().lat > 90 ? 90 : extent.getNorthWest().lat;
      return L.latLngBounds(L.latLng(bottom, left), L.latLng(top, right));
    }
  </script>
</body>

</html>
